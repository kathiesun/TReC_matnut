geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Igf2"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
head(pmat)
head(pmat %>% filter(padj_fdr < 1e4, !ie, de) %>% arrange(desc(fisher_stat)), n=10)
geneUse = "Syngr1"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Ubc"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Clec16a"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Pcdhga4"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Ncald"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Arl6ip1"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Tprkb"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
head(pmat %>% filter(padj_fdr < 1e4, !ie, de) %>% arrange(desc(fisher_stat)), n=10)
dim(pmat %>% filter(padj_fdr < 1/11966, n > 2) %>% arrange(padj_fdr))
head(pmat %>% filter(padj_fdr < 1e4, !ie, de) %>% arrange(desc(fisher_stat)), n=10)
rownames(pmat %>% filter(padj_fdr < 1e4, !ie, de) %>% arrange(desc(fisher_stat)))
genes = rownames(pmat %>% filter(padj_fdr < 1e4, !ie, de) %>% arrange(desc(fisher_stat)))
dir
pdf(file.path(dir,'trec/de_notIE_gene_plots.pdf'))
for(g in genes){
geneUse = g
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
}
dev.off()
head(total_counts %>% arrange(desc(ratio)))
total_counts %>% group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot, mean_rat = mean(ratio_m))
total_counts %>% group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot, mean_rat = mean(ratio_m)) %>%
arrange(desc(ratio_m))
total_counts %>% group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot) %>%
summarize(mean_rat = mean(ratio_m)) %>%
arrange(desc(ratio_m))
total_counts %>% group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot) %>%
summarize(mean_rat = mean(ratio_m)) %>%
arrange(desc(ratio_m))
head(total_counts)
tmp  %>% group_by(seq.Gene) %>%  summarize(mean_rat = mean(ratio_m)) %>%
arrange(desc(ratio_m))
total_counts %>% group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot)  = tmp
tmp  %>% group_by(seq.Gene) %>%  summarize(mean_rat = mean(ratio_m)) %>%
arrange(desc(ratio_m))
total_counts %>% group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot)  = tmp
tmp = total_counts %>% group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot)
tmp  %>% group_by(seq.Gene) %>%  summarize(mean_rat = mean(ratio_m)) %>%
arrange(desc(ratio_m))
head(tmp)
tmp  %>% group_by(seq.Gene) %>%
dplyr::summarize(mean_rat = mean(ratio_m)) %>%
arrange(desc(ratio_m))
tmp = total_counts %>% ungroup() %>%
group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot)
tmp = total_counts %>% ungroup() %>%
group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot) %>%
summarize(mean_rat = mean(ratio_m))
tmp = total_counts %>% ungroup() %>%
group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot) %>%
summarize(mean_rat = mean(ratio_m)) %>%
arrange(desc(mean_rat))
total_counts %>% ungroup() %>%
group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot) %>%
summarize(mean_rat = mean(ratio_m)) %>%
arrange(desc(mean_rat))
dim(pmat %>% filter(padj_fdr < 1/11966, n > 2) %>% arrange(padj_fdr))
dim(pmat %>% filter(padj_fdr < 1/11966, n > 3) %>% arrange(padj_fdr))
dim(pmat %>% filter(padj_fdr < 1/11966, n > 2) %>% arrange(padj_fdr))
dim(pmat %>% filter(padj_fdr < 1/11966, n > 1) %>% arrange(padj_fdr))
genes = rownames(pmat %>% filter(padj_fdr < 1/11966, n > 1) %>% arrange(padj_fdr))
total_counts %>% ungroup() %>%
group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot) %>%
summarize(mean_rat = mean(ratio_m)) %>%
arrange(desc(mean_rat)) %>%
filter(mean_rat > 0.6)
total_counts %>% ungroup() %>%
group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot) %>%
summarize(mean_rat = mean(ratio_m), n=n()) %>%
arrange(desc(mean_rat)) %>%
filter(mean_rat > 0.6)
total_counts %>% ungroup() %>%
group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot) %>%
summarize(mean_rat = mean(ratio_m), n=n()) %>%
arrange(desc(mean_rat)) %>%
filter(mean_rat > 0.6, n>1)
useGene = "Dnajb6"
geneUse = useGene
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
total_counts %>% ungroup() %>%
group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot) %>%
summarize(mean_rat = mean(ratio_m), n=n()) %>%
arrange(desc(mean_rat)) %>%
filter(mean_rat > 0.6, n>1, mean_rat < 1)
total_counts %>% ungroup() %>%
group_by(seq.Gene) %>%
mutate(ratio_m = sum_1 / sum_tot) %>%
summarize(mean_rat = mean(ratio_m), n=n()) %>%
arrange(desc(mean_rat)) %>%
filter(mean_rat > 0.6, n>6, mean_rat < 1)
geneUse = "Mirg"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
head(rownames(pmat))
pmat[grep("Fam205c|Mirg",rownames(pmat).]
pmat[grep("Fam205c|Mirg",rownames(pmat),]
pmat[grep("Fam205c|Mirg",rownames(pmat)),]
geneUse = "Fam205c"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Gdpd3"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Gatad1"
pdf(file.path(dir,'trec/de_notIE_gene_plots.pdf'))
dev.off()
geneUse = g
geneUse = "Gatad1"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Lyrm7"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Gatad1"
nts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Mirg"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Impact"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
geneUse = "Inpp5f"
plot_gene = total_counts %>% filter(seq.Gene == geneUse) %>%
mutate(ratio = sum_1 / sum_tot)
jitter <- position_jitter(width = 0.1, height = 0)
ggplot(plot_gene, aes(x=dir)) +
geom_point(aes(y=sum_1), position=jitter, col="red") +
geom_point(aes(y=sum_2), position=jitter, col="blue") +
#geom_point(aes(y = ratio)) +
facet_grid(~ RRIX) +
labs(title = geneUse,
y = "Counts", x="POE direction") +
theme_classic()
plot_gene
c=1
masterSnps = readRDS(masterSnps_files[grep(paste0("chr",c,"_"), masterSnps_files)])
masterSnps = readRDS(masterSnps_files[grep(paste0("chr",c,"_"), masterSnps_files)])
masterSnps = masterSnps[[1]]
masterSnps <- do.call("cbind", masterSnps)
indiv_pups = list.files(file.path(dir, "mini/pup_haplo_blocks_by_CC_parent_dec2019"), pattern="haploBlocks", full.names = T)
phased_CC_haplotype = lapply(indiv_pups, readRDS)
tmp = do.call("rbind", lapply(indiv_pups, function(x) unlist(strsplit(x, "_"))))
names(phased_CC_haplotype) = paste0("Pup.ID_", tmp[,ncol(tmp)-1])
seg_regions = readRDS(file.path(dir,"mini/seg_regions_by_genotyping_perRIX_kmerBased_23nov2019.rds"))
masterSnps_files = list.files(file.path(dir, "variant_data/kmers_to_run"), pattern="masterSnps_chr", full.names = T)
count_files <- list.files(file.path(dir,"variant_data/kmer_counts"), ".csv", full.names = T)
## CC labels
#lab = read.csv("C:/Users/Kathie/Dropbox (ValdarLab)/variant_data/matched_v2_4jun2018.csv")
lab = read.csv(file.path(dir, "matnut_main/matched_v2_4jun2018.csv"))
lab %>% dplyr::select(one_of("Pup.ID","RRIX", "CC.1","CC.2")) %>%
filter(!is.na(Pup.ID)) -> lab
## Pup demographic info
pupInfo = matnut[,c(1,2,4,5,8,10,12,13,16,17)]
pupInfo %>% mutate(dir = gsub("[0-9]","", Reciprocal)) %>%
mutate(Diet = gsub(" ","", Diet)) -> pupInfo
data_kmers = ratios_lst = list()
masterSnps = readRDS(masterSnps_files[grep(paste0("chr",c,"_"), masterSnps_files)])
masterSnps = masterSnps[[1]]
masterSnps <- do.call("cbind", masterSnps)
masterSnps$seq.consensus <- paste0(masterSnps$seq.end5, masterSnps$seq.end3)
## count data
chr_files <- count_files[grep(paste0("chr", c,"_"), count_files)]
ref_file <- chr_files[grep("ref", chr_files)]
alt_file <- chr_files[grep("alt", chr_files)]
reforig <- unique(read.csv(ref_file, header = T))
altorig <- unique(read.csv(alt_file, header = T))
reforig$X = altorig$X <- NULL
#reforig = reforig %>% filter(k.mer %in% useSnps$seq.refseq)
#altorig = altorig %>% filter(k.mer %in% useSnps$seq.altseq)
reforig$pup = reforig$pup.id
altorig$pup = altorig$pup.id
chr=c
snp_info=masterSnps
sample_info=pupInfo
RIX_info=lab
ref_counts=reforig
alt_counts=altorig
use_gene=F
problemPups = c(1404, 1716, 1371, 569, 1911, 1951, 1015)
xce <- as.data.frame(rbind(rix1 = c("CC011", "CC001", "e", "a"),
rix2 = c("CC041", "CC051", "b", "b"),
rix3 = c("CC004", "CC017", "b", "e"),
rix4 = c("CC023", "CC047", "b", "b"),
rix6 = c("CC026", "CC006", "b", "b"),
rix7 = c("CC003", "CC014", "e", "a"),
rix8 = c("CC035", "CC062", "a", "a"),
rix9 = c("CC032", "CC042", "c", "a"),
rix10 = c("CC005", "CC040", "b", "b")))
colnames(xce) = c("num_cc", "dem_cc", "num_let", "dem_let")
xce_df = data.frame(founder = LETTERS[1:8],
xce_al = c("a","b","a","n","z","c","e","b"))
## revComp
revComp <- function(str){
tmp <- unlist(strsplit(str, ""))
revd <- rev(toupper(tmp))
comp <- lapply(revd, function(x) ifelse(x == "A", "T", ifelse(x == "T", "A", ifelse(x == "G", "C", ifelse(x == "C", "G", "-")))))
return(paste(unlist(comp),  collapse=""))
}
chr <- ifelse(chr == 20, "X", chr)
chr_num <- ifelse(chr == "X", 20, as.numeric(chr))
#### XO 1015, 1911 and 1951; low RNA-seq 1404, 1716, 1371, 569
myCounts <- sort_counts(ref_counts, alt_counts)
if(length(problemPups) > 0) myCounts <- myCounts %>% filter(!Pup.ID %in% problemPups)
if(is.null(phased_CC_haplotype)){
phased <- phase_counts(snps=snp_info, counts=myCounts, pupInfo=sample_info, CC_labels=RIX_info,
haplotypes, cc_haplotypes)
plotMe <- plot_counts(snps=snp_info, counts=myCounts, pupInfo=sample_info, CC_labels=RIX_info,
keepEB=T, keepFS=F, keepFD=F)
} else {
plotMe <- plot_counts_based_on_founders(snps=snp_info, counts=myCounts,
pupInfo=sample_info,
CC_labels=RIX_info,
keepEB=T, keepFS=F, keepFD=F,
phased_CC_haplotype = phased_CC_haplotype,
seg_regions = seg_regions,
lb=lb, ub=ub)
}
if(use_gene){
data_kmers = plotMe$plotGenes
} else {
data_kmers = plotMe$plotMat
}
data_kmers$RRIX <- as.numeric(gsub("[a-z]","", data_kmers$RIX))
data_kmers$pup_gene <- paste(data_kmers$Pup.ID, data_kmers$seq.Gene, sep="_")
data_kmers$Diet <- factor(data_kmers$Diet, levels = sort(unique(data_kmers$Diet))[c(3,1,2,4)])
data_kmers$RRIX <- factor(data_kmers$RRIX, levels = c(1:4, 6:10))
data_kmers$DietRIX <- factor(paste0(data_kmers$Diet, "_",data_kmers$RRIX),
levels = paste(unique(data_kmers$Diet)[c(3,1,2,4)], rep(c(1:4, 6:10), each=4), sep="_"))
data_kmers$dir = factor(data_kmers$dir, levels=c("a","b"))
data_kmers %>% arrange(Pup.ID, seq.Position) -> data_kmers
is.null(phased_CC_haplotype)
snps=snp_info
counts=myCounts
chr <- ifelse(chr == 20, "X", chr)
chr_num <- ifelse(chr == "X", 20, as.numeric(chr))
chr
chr_num
chr_num
#### XO 1015, 1911 and 1951; low RNA-seq 1404, 1716, 1371, 569
myCounts <- sort_counts(ref_counts, alt_counts)
if(length(problemPups) > 0) myCounts <- myCounts %>% filter(!Pup.ID %in% problemPups)
snps=snp_info
counts=myCounts
pupInfo=sample_info
CC_labels=RIX_info
keepEB=T
keepFS=F
keepFD=F
head(total_counts)
ref=ref_counts
alt=alt_counts
is.null(colnames(ref))
alt = alt %>% arrange(pup.id, k.mer)
ref = ref %>% arrange(pup.id, k.mer)
tmp <- do.call("rbind", strsplit(as.character(alt$k.mer), ""))
tmp <- tmp[,-((ncol(tmp)+1)/2)]
consensus <- apply(tmp, 1, function(x) paste(x, collapse=""))
alt$consensus = consensus
alt$pup_consensus = paste0(alt$pup, "_", alt$consensus)
alt$consensus_dir = sapply(1:nrow(alt), function(x)
ifelse(alt$counts[x] > 0, paste(alt$consensus[x], alt$dir[x], sep="_"), 0))
tmp <- do.call("rbind", strsplit(as.character(ref$k.mer), ""))
tmp <- tmp[,-((ncol(tmp)+1)/2)]
consensus <- apply(tmp, 1, function(x) paste(x, collapse=""))
ref$consensus = consensus
ref$pup_consensus = paste0(ref$pup, "_", ref$consensus)
ref$consensus_dir = sapply(1:nrow(ref), function(x)
ifelse(ref$counts[x] > 0, paste(ref$consensus[x], ref$dir[x], sep="_"), 0))
alt = alt[match(ref$pup_consensus, alt$pup_consensus),]
all.equal(ref$pup_consensus, alt$pup_consensus)
head(data_kmers_list)
data_kmers_list = lapply(data_kmers_list, function(x)
do.call("rbind", data.frame(apply(x, 1, function(y) strsplit(y," ")))))
data_kmers_list = saveRDS(file.path(dir, "trec/data_kmers_from_process_and_plot/data_kmers_list_out_26jan2021.rds"))
data_kmers_list = lapply(files, read.table, sep="\n")
data_kmers_list = lapply(data_kmers_list, function(x)
do.call("rbind", data.frame(apply(x, 1, function(y) strsplit(y," ")))))
head(data_kmers_list)
#data_kmers_list = saveRDS(file.path(dir, "trec/data_kmers_from_process_and_plot/data_kmers_list_out_26jan2021.rds"))
data_kmers_list = readRDS(file.path(dir, "trec/data_kmers_from_process_and_plot/data_kmers_list_out_26jan2021.rds"))
data_kmers_list = lapply(files, read.table, sep="\n")
data_kmers_list = lapply(data_kmers_list, function(x)
do.call("rbind", data.frame(apply(x, 1, function(y) strsplit(y," ")))))
for(i in 1:length(data_kmers_list)){
colnames(data_kmers_list[[i]]) = data_kmers_list[[i]][1,]
data_kmers_list[[i]] = data_kmers_list[[i]][-1,]
rownames(data_kmers_list[[i]]) = NULL
data_kmers_list[[i]] = data.frame(data_kmers_list[[i]])
data_kmers_list[[i]][,c("Breeding.Batch","Behavior.Batch","RIX","Diet","dir","CC_lab")] =
apply(data_kmers_list[[i]][,c("Breeding.Batch","Behavior.Batch","RIX","Diet","dir","CC_lab")], 2, as.factor)
data_kmers_list[[i]][,c("CC_1","CC_2","sum","kRat","kLB","kUB")] =
apply(data_kmers_list[[i]][,c("CC_1","CC_2","sum","kRat","kLB","kUB")], 2, as.numeric)
}
#data_kmers_list = saveRDS(file.path(dir, "trec/data_kmers_from_process_and_plot/data_kmers_list_out_26jan2021.rds"))
data_kmers_list = readRDS(file.path(dir, "trec/data_kmers_from_process_and_plot/data_kmers_list_out_26jan2021.rds"))
data_kmers_list = lapply(files, read.table, sep="\n")
data_kmers_list = lapply(data_kmers_list, function(x)
do.call("rbind", data.frame(apply(x, 1, function(y) strsplit(y," ")))))
head(data_kmers_list[[1]])
#data_kmers_list = saveRDS(file.path(dir, "trec/data_kmers_from_process_and_plot/data_kmers_list_out_26jan2021.rds"))
data_kmers_list = readRDS(file.path(dir, "trec/data_kmers_from_process_and_plot/data_kmers_list_out_26jan2021.rds"))
data_kmers_list = lapply(files, read.table, sep="\n")
data_kmers_list = lapply(data_kmers_list, function(x)
do.call("rbind", data.frame(apply(x, 1, function(y) strsplit(y," ")))))
